<!DOCTYPE html>
<html>
<head>
  <metamon charset="utf-8">

  <title>코드라이언::2. 빔의 기본 사용법 (1)</title>

  <meta name="viewport" content="width=device-width" />
  <meta name="author" content="코드라이언팀">
  <meta name="description" content="9주 간의 웹 프로그래밍 교육 서비스, 당신의 웹 서비스를 만드세요." />
  <meta name="keywords" content="멋쟁이사자처럼,코딩교육,프로그래밍교육,코딩,레일즈,루비,웹교육,Rails,Ruby,Programming,Coding,Code" />

  <meta name="naver-site-verification" content="2cba56627bff21e60cb947596899055ef17c3df5"/>

  <metamon property="og:title" content="코드라이언::9주 간의 웹 프로그래밍 교육 서비스" />
  <metamon property="og:url" content="http://codelion.net" />
  <metamon property="og:type" content="website" />
  <metamon property="fb:app_id" content="227187014096034" />
  <metamon property="og:site_name" content="코드라이언" />
  <metamon property="og:image" content="http://codelion.net/facebook-codelion.png" />
  <metamon property="og:description" content="9주 간의 웹 프로그래밍 교육, 당신의 웹 서비스를 만드세요. "/>

  <metamon name="twitter:card" content="photo">
  <metamon name="twitter:site" content="@codelionteam">
  <metamon name="twitter:url" content="http://codelion.net">
  <metamon name="twitter:title" content="코드라이언::9주의 웹프로그래밍 교육">
  <metamon name="twitter:description" content="9주 간의 웹 프로그래밍 교육, 당신의 웹 서비스를 만드세요.">
  <metamon name="twitter:image" content="http://codelion.net/twitter-codelion.png">
  <metamon name="twitter:image:width" content="600">
  <metamon name="twitter:image:height" content="600">

  <link href="/assets/application-f7368d1fc9762aea59048e17ecb5bdd7.css" media="all" rel="stylesheet" />
  <script src="/assets/application-7a9d898a9ce815829a30968574475b2c.js"></script>
  <metamon content="authenticity_token" name="csrf-param" />
<metamon content="eiWM3ciELgCUp9WW/DVGk6baFXdaOU8aUzdj9bPteQI=" name="csrf-token" />


  <script>
  UserVoice=window.UserVoice||[];(function(){var uv=document.createElement('script');uv.type='text/javascript';uv.async=true;uv.src='//widget.uservoice.com/MGcJHwobtGLdnqheyJmUaA.js';var s=document.getElementsByTagName('script')[0];s.parentNode.insertBefore(uv,s)})();
  // Set colors
  UserVoice.push(['set', {
    accent_color: '#e23a39',
    trigger_color: 'white',
    trigger_background_color: 'rgba(46, 49, 51, 0.6)'
  }]);
  // Identify the user and pass traits
  // To enable, replace sample data with actual user traits and uncomment the line
  UserVoice.push(['identify', {
    email:      'uc011@nate.com',
    name:       '심재용',
    created_at: 1434383525, // Unix timestamp for the date the user signed up
    id:         3381, // Optional: Unique id of the user (if set, this should not change)
    type:       'member' // Optional: segment your users by type
    //account: {
    //  id:           123, // Optional: associate multiple users with a single account
    //  name:         'Acme, Co.', // Account name
    //  created_at:   1364406966, // Unix timestamp for the date the account was created
    //  monthly_rate: 9.99, // Decimal; monthly rate of the account
    //  ltv:          1495.00, // Decimal; lifetime value of the account
    //  plan:         'Enhanced' // Plan name for the account
    //}
  }]);

  // Add default trigger to the bottom-right corner of the window:
  UserVoice.push(['addTrigger', { mode: 'contact', trigger_position: 'bottom-left' }]);

  // Or, use your own custom trigger:
  //UserVoice.push(['addTrigger', '#id', { mode: 'contact' }]);

  // Autoprompt for Satisfaction and SmartVote (only displayed under certain conditions)
  UserVoice.push(['autoprompt', {}]);
  </script>

  <script>
    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
        (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
      m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
    })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

    ga('create', 'UA-43626701-1','auto');
    ga('set', 'user_id', 3381);
    ga('set', 'dimension1', 'member');
    ga('set', 'dimension2', '2015/6');
    ga('set', 'dimension3', '15');
    ga('set', 'dimension4', '3381');
    ga('set', 'dimension5', '12');
    ga('set', 'dimension6', '59.3.23.242');
    ga('set', 'dimension7', 'Y:2015;Q:2;M:06;WY:2015;WN:24;WD:1;D:15;H:15');
    ga('send', 'pageview');
  </script>

</head>
<body>
  <div id="header" style="">
    <div class="transparent_headaer_left">
      <a href="/" class="header_codelion"></a>
      <img alt="Beta" id="beta" src="/assets/beta-66d69f089bea48d56e84cba24038f495.png" />
    </div>

    <div class="transparent_header_right">
      <div class="transparent_header_user" >
        <div class="tp_profile_name">심재용</div> 
      </div>
      <div class="tp_header_percent">
          <h3>66%</h3>
      </div>
      <div class="tp_header_setting">
        <a data-toggle="dropdown" href="#" class="icon"></a>
        <ul id="dropdown-tooltip" class="dropdown-menu" role="menu" aria-labelledby="dLabel" style="top:36px;min-width:70px;left:-82px;">
          <li><a class="navbar-link" href="/users/edit">비밀번호 설정</a> </li>
          <li><a class="navbar-link" data-method="delete" href="/users/sign_out" rel="nofollow">로그아웃</a> </li>
        </ul>
      </div>


    </div>
</div>

  <div> <!-- background image and blur effect! -->
  <div class="img-src" id="bg" > </div>
  <div class="img-src blurred-img" id="bg-blur"> </div>
</div>

<div class="headline_body">

  <div class="headline_content_link">
    <a class="headline_content_link_content_home" style="margin-left:50px;"href="/">홈</a>
    <a class="headline_content_link_content"href="#">></a>
    <a class="headline_content_link_content_week"href="/weeks/overview/2">1주</a>
    <a class="headline_content_link_content"href="#">></a>
    <a class="headline_content_link_content_lecture"href="/weeks/overview/2">3강</a>
    <a class="headline_content_link_content"href="#">></a>
    <a class="headline_content_link_content_section"href="/weeks/headline_content/12">2장</a>
  </div>

  <div class="headline_content_img">
    <h1 class="headline_content_img_content">2. 빔의 기본 사용법 (1)</h1>
  </div>


  <div class="headline_content_body">
    <div class="panel-group headline_content_body_accordion" id="accordion">
        <div class="panel headline_content_body_accordion" style="margin-bottom:0px">

        <div class="panel-heading headline_content_body_accordion_section" style="margin-bottom:-15px;"onClick="accordion_head(35)">
          <h4 class="panel-title">
            <a class="accordion-toggle headline_content_body_accordion_section_text" data-toggle="collapse" data-parent="#accordion" href="#collapse_35" >
            <strong>
              빔을 좀 더 능숙하게 사용하기 (0)
            </strong>
            </a>
          </h4>
        </div>
        <div id="collapse_35" class="panel-collapse collapse">
          <div class="panel-body headline_content_body_accordion_content">
            <div class="section-contents">
              <h1>[0] 빔으로 방대한 내용의 파일 다루기 - 내용 붙여넣기</h1>

<p>여러분이 일반적으로 처음 코드를 작성할 때, 거의 대부분의 경우 인터넷 상에서 구글링을 통해 참조할 만한 코드를 찾는 과정이 선행된다. 참조 코드의 길이가 대여섯 줄 정도에 불과할 경우 이를 그대로 보고 따라 입력해도 되지만, 참조 코드의 길이가 10줄 이상을 넘어가는 경우 이를 그대로 따라 입력하는 것은 미친 짓이다. 이 때, 인터넷 상의 참조 코드를 그대로 ‘복사-붙여넣기’하면 해당 코드를 아주 쉽고 빠르게 가져올 수 있다. </p>

<p>이를 연습하기 위해, 전설적인(?) 예시를 하나 활용해보도록 하자. 아래는 세계 최초로 생겨난 WWW(World Wide Web) 페이지의 URL이다:</p>

<p><a href="http://info.cern.ch/hypertext/WWW/TheProject.html">The World Wide Web Project(http://info.cern.ch/hypertext/WWW/TheProject.html)</a></p>

<p>이 페이지는 WWW의 창시자인 팀 버너스리(Tim Berners-Lee)가 제작한 것으로, WWW에 대하여 설명하는 내용을 담고 있다. 위 URL을 클릭하여 접속하면, 아래 그림과 같은 화면이 등장할 것이다. 여기에서 화면 상의 빈 곳에 커서를 놓고 마우스 오른쪽 버튼을 클릭한 뒤, ‘페이지 소스 보기’를 클릭한다:</p>

<p><img src="/contents-image/w1_l3_h11_0.png" alt="The World Wide Web Project &gt; 우클릭 &gt; 페이지 소스 보기 클릭" /></p>

<p>아래 그림과 같이 페이지를 구성하는 HTML 코드가 나올 것이다. 아래 그림과 같이, 화면에 나온 코드를 전체 선택하여 복사한다:</p>

<p><img src="/contents-image/w1_l3_h11_1.png" alt="The World Wide Web Project 페이지 소스 보기 &gt; 전체 선택 및 복사" /></p>

<p>전체 선택 및 복사할 때, 윈도우의 경우 <strong>Ctrl</strong>+<strong>a</strong>, <strong>Ctrl</strong>+<strong>c</strong> 키를 순서대로 누르고, Mac OS의 경우 <strong>Command</strong>+<strong>a</strong>, <strong>Command</strong>+<strong>c</strong> 키를 순서대로 누르면 된다.</p>

<div class="additional">
  <p>지금까지의 과정은 철저하게 <strong>크롬(Chrome)</strong> 브라우저를 가지고 설명하였다. 인터넷 익스플로러(IE) 혹은 기타 웹 브라우저를 사용하는 경우에도 그 방식은 거의 비슷하다.</p>

  <p>그런데 사실, 코드라이언에서는 여러분에게 크롬을 사용하는 것을 무조건적으로 권한다. 이는 뒤에서 다시 한 번 이야기가 될 것이지만, 다른 브라우저와 비교할 때 크롬을 사용하는 데서 오는 몇 가지 강력한 장점이 있기 때문이다. 앞으로 웹 브라우저를 사용하는 모든 내용들은 크롬을 중심으로 설명될 것이다.</p>
</div>

<p>이제 터미널로 돌아온 뒤, 홈 디렉터리 상에서 다음과 같이 입력하고 엔터를 누른다:</p>

<div class="linux"><table class="CodeRay"><tr>
  <td class="line-numbers"><pre><a href="#n1" name="n1">1</a>
</pre></td>
  <td class="code"><pre>$ vi theproject.html
</pre></td>
</tr></table>
</div>

<p>그러면, 아래 그림과 같이 새로운 빔 화면이 등장하면서, 화면 하단에 <code>theproject.html</code>이라는 이름의 새로운 파일을 수정하고 있음이 표시된다:</p>

<p><img src="/contents-image/w1_l3_h11_2.png" alt="빔 실행 화면 &gt; theproject.html 새 파일" /></p>

<p>새로운 HTML파일을 만드는데, 앞서 했던 것과는 방식이 조금 다르다. 기존에 만들었던 파일을 열 때와 마찬가지로, 이렇게 <code>vi &lt;파일명&gt;</code>을 사용하면 해당 파일명을 가진 파일을 새로 만들 수 있다. </p>

<p>이제 빔 화면에서 <strong>i</strong> 키를 눌러 입력 모드로 전환한 뒤, 아래 그림과 같이 좀 전에 복사했던 내용을 붙여넣는다. 이 때, iTerm을 사용하는 Mac OS 사용자들의 경우 <strong>Command</strong>+<strong>v</strong> 키를 누르면 되며, PuTTY를 사용하는 윈도우 사용자들의 경우 PuTTY 화면 위의 아무 곳에나 커서를 올려놓고 <strong>마우스 오른쪽 버튼</strong>을 클릭하면 된다:</p>

<p><img src="/contents-image/w1_l3_h11_3.png" alt="입력 모드 &gt; 붙여넣기" /></p>

<p>붙여넣기가 정상적으로 이루어졌다면, 그 결과는 아래 그림과 같을 것이다. <strong>Esc</strong> 키를 눌러 일반 모드로 돌아간다:</p>

<p><img src="/contents-image/w1_l3_h11_4.png" alt="입력 모드 &gt; 일반 모드" /></p>

<p>이렇게 원하는 코드를 빔 상에 그대로 복사해서 붙여넣을 수 있다. 붙여넣은 코드를 자유롭게 살펴본 뒤, 아래 그림과 같이 <code>:w</code> 명령어를 입력하고 엔터를 눌러 저장하도록 하자:</p>

<p><img src="/contents-image/w1_l3_h11_5.png" alt="일반 모드&gt; :w 입력" /></p>

<p><br /></p>

<h1>[1] 빔으로 방대한 내용의 파일 다루기 - 화면 스크롤하기</h1>

<p>앞서 빔으로 작성한 <code>theproject.html</code> 파일을 다시 열어서 내용을 확인해보자. </p>

<p><code>theproject.html</code> 파일과 같이, 방대한 양의 코드를 포함하는 파일의 내용을 확인하고자 할 때 <strong>h</strong>, <strong>j</strong>, <strong>k</strong>, <strong>l</strong> 키만을 사용하여 커서를 움직이면서 확인하는 것은 그다지 효율적이지 않다. 이러한 경우 화면 단위의 스크롤을 통해 커서를 한 번에 여러 줄씩 움직일 수 있다. 아래 그림과 같이 <strong>Ctrl</strong> + <strong>b</strong> 키를 눌러보자:</p>

<p><img src="/contents-image/w1_l3_h11_6.png" alt="일반 모드 &gt; Ctrl + b 입력" /></p>

<p>그러면 아래 그림과 같이 화면 전체가 윗 방향으로 스크롤된 것을 확인할 수 있다. 빔 화면 우측 하단에서 현재 커서의 위치를 나타내는 부분을 확인해보면, 커서의 위치가 위쪽 행으로 이동한 것을 쉽게 확인할 수 있다:</p>

<p><img src="/contents-image/w1_l3_h11_7.png" alt="일반 모드 &gt; 화면 위쪽 스크롤 확인" /></p>

<p>만약 화면을 아래 방향으로 스크롤하고 싶다면, 아래 그림과 같이 <strong>Ctrl</strong> + <strong>f</strong> 키를 누른다:</p>

<p><img src="/contents-image/w1_l3_h11_8.png" alt="일반 모드 &gt; Ctrl + f 입력" /></p>

<p>그러면 아래 그림과 같이 화면이 다시 원래 있었던 위치로 스크롤된 것을 확인할 수 있다.</p>

<p><img src="/contents-image/w1_l3_h11_9.png" alt="일반 모드 &gt; 화면 아랫쪽 스크롤 확인" /></p>

<div class="additional">
  <p>위에서 직접 사용해봤던 키들을 포함하여, 화면을 스크롤할 때 사용하는 주요 키들을 아래의 표에 정리해 놓았다:</p>

  <table>
    <tr>
        <td><strong>키</strong></td>
        <td><strong>설명</strong></td>
    </tr>
    <tr>
        <td><strong>Ctrl</strong>+<strong>f</strong></td>
        <td>한 화면 아래 방향으로 스크롤</td>
    </tr>   
    <tr>
        <td><strong>Ctrl</strong>+<strong>b</strong></td>
        <td>한 화면 윗 방향으로 스크롤</td>
    </tr>
    <tr>
        <td><strong>Ctrl</strong>+<strong>d</strong></td>
        <td>반 화면 아래 방향으로 스크롤</td>
    </tr>
    <tr>
        <td><strong>Ctrl</strong>+<strong>u</strong></td>
        <td>반 화면 윗 방향으로 스크롤</td>
    </tr>
</table>

  <p>화면 스크롤과 관련된 키는 위에서 제시한 것 이외에도 몇 가지가 더 있으나, 위의 4가지 정도면 기억해도 충분하다. 그조차도 많다면, 앞에서 사용해 보았던 <strong>Ctrl</strong>+<strong>f</strong>, <strong>Ctrl</strong>+<strong>b</strong>만 기억해도 된다.</p>

  <p>실제로 빔 상에서 위의 키들을 눌러보면서, 화면이 어떻게 스크롤되는지 직접 관찰해 보도록 하자!</p>
</div>

            </div>
          </div>
        </div>

      </div>
        <div class="panel headline_content_body_accordion" style="margin-bottom:0px">

        <div class="panel-heading headline_content_body_accordion_section" style="margin-bottom:-15px;"onClick="accordion_head(36)">
          <h4 class="panel-title">
            <a class="accordion-toggle headline_content_body_accordion_section_text" data-toggle="collapse" data-parent="#accordion" href="#collapse_36" >
            <strong>
              빔을 좀 더 능숙하게 사용하기 (1)
            </strong>
            </a>
          </h4>
        </div>
        <div id="collapse_36" class="panel-collapse collapse">
          <div class="panel-body headline_content_body_accordion_content">
            <div class="section-contents">
              <h1>[2] 빔으로 방대한 내용의 파일 다루기 - 단어 찾기</h1>

<p>앞서 빔으로 작성한 <code>theproject.html</code> 파일을 다시 열어서 내용을 확인해보자.</p>

<p><code>theproject.html</code> 파일 안의 내용 상에서 ‘W3’라는 단어가 어디어디에 등장하는지 찾고자 한다고 가정하자. 그러한 경우, 먼저 <strong>:</strong> 키를 눌러 명령행 모드로 전환한 뒤 아래 그림과 같이 <code>:/W3</code>라고 입력한 뒤 엔터를 누른다:</p>

<p><img src="/contents-image/w1_l3_h11_10.png" alt="일반 모드 &gt; /W3 입력" /></p>

<p>그러면 아래 그림과 같이 파일 상에서 ‘W3’가 처음 등장하는 위치로 커서가 이동하면서 화면이 스크롤된 것을 확인할 수 있다. 빔 화면 상에서 ‘W3’가 등장하는 위치가 노란색으로 하이라이트된 것에 주목하자:</p>

<p><img src="/contents-image/w1_l3_h11_11.png" alt="일반 모드 &gt; 'W3' 검색 결과" /></p>

<p>이 상태에서 아래 그림과 같이 <strong>n</strong> 키를 눌러보자:</p>

<p><img src="/contents-image/w1_l3_h11_12.png" alt="일반 모드 &gt; 'W3' 검색 결과 &gt; n 입력" /></p>

<p>그러면 현재 위치 바로 아래에서 ‘W3’가 등장하는 위치로 커서가 이동하게 된다. 이는 아래 그림과 같다:</p>

<p><img src="/contents-image/w1_l3_h11_13.png" alt="일반 모드 &gt; 'W3' 검색 결과 &gt; n 입력 결과" /></p>

<p>이번에는 아래 그림과 같이 <strong>N</strong> (<strong>Shift</strong>+<strong>n</strong>) 키를 눌러보자:</p>

<p><img src="/contents-image/w1_l3_h11_14.png" alt="일반 모드 &gt; 'W3' 검색 결과 &gt; N 입력" /></p>

<p>그러면 현재 위치 바로 위에서 ‘W3’가 등장하는 위치로 커서가 이동하게 된다. 이는 아래 그림과 같다:</p>

<p><img src="/contents-image/w1_l3_h11_15.png" alt="일반 모드 &gt; 'W3' 검색 결과 &gt; N 입력 결과" /></p>

<p>지금까지 따라한 것과 같이, 명령행 모드에서 <code>:/&lt;단어&gt;</code> 명령어를 사용하면 해당하는 단어가 등장하는 위치를 현재 파일 상에서 쉽게 확인할 수 있다. 이렇게 찾은 결과에 대하여, <strong>n</strong> 키와 <strong>N</strong> 키를 사용하면 이들 단어가 포함되어 있는 위치로 커서를 손쉽게 이동시킬 수 있다.</p>

<div class="additional">
  <p>위에서 <code>:/&lt;단어&gt;</code> 명령어를 실행하여 단어 찾기를 수행하는 과정에서 사용했던 키들을 아래의 표에 정리해 놓았다:</p>

  <table>
    <tr>
        <td><strong>키</strong></td>
        <td><strong>설명</strong></td>
    </tr>
    <tr>
        <td><strong>n</strong></td>
        <td>현재 위치 아래쪽에서 해당 단어가 등장하는 위치로 커서 이동</td>
    </tr>   
    <tr>
        <td><strong>N</strong></td>
        <td>현재 위치 위쪽에서 해당 단어가 등장하는 위치로 커서 이동</td>
    </tr>
</table>

  <p>참고로, <code>:/&lt;단어&gt;</code> 명령어를 실행하여 해당 단어가 등장하는 위치가 하이라이트되도록 하였을 때, <code>:noh</code> 명령어를 실행하면 하이라이트를 해제할 수 있다. 반드시 기억할 필요는 없으나, 하이라이트된 결과가 눈에 거슬려서 없애고 싶은 경우에 한해 가끔씩 사용하면 좋다.</p>
</div>

<h1>[3] 빔으로 방대한 내용의 파일 다루기 - 단어 찾아 바꾸기</h1>

<p>앞서 빔으로 작성한 <code>theproject.html</code> 파일을 다시 열어서 내용을 확인해보자.</p>

<p><code>theproject.html</code> 파일 안의 내용 상에서 등장하는 ‘W3’라는 단어를 모두 ‘WWW’라는 단어로 바꾸고자 한다. 그러한 경우, 먼저 <strong>:</strong> 키를 눌러 명령행 모드로 전환한 뒤 아래 그림과 같이 <code>:%s/W3/WWW</code>라고 입력한 뒤 엔터를 누른다:</p>

<p><img src="/contents-image/w1_l3_h11_16.png" alt="일반 모드 &gt; %s/W3/WWW 입력" /></p>

<p>그러면 아래 그림과 같이 몇 개가 바뀌었는지를 알려주는 메시지가 뜨면서, 파일 안의 전체 내용 상에 등장하는 모든 ‘W3’가 ‘WWW’로 바뀐 것을 확인할 수 있다:</p>

<p><img src="/contents-image/w1_l3_h11_17.png" alt="일반 모드 &gt; %s/W3/WWW 입력 &gt; 바뀐 결과 확인" /></p>

<p>이렇게 <code>:%s/&lt;기존 단어&gt;/&lt;새로운 단어&gt;</code> 명령어를 사용하면, 파일 전체 내용 상에 등장하는 특정 단어를 모두 찾아 새로운 단어로 손쉽게 바꿀 수 있다. </p>

<p>바로 전까지의 과정에서는 파일 전체 내용에 대하여 단어 찾아 바꾸기를 수행하였다면, 내용의 일부를 블록으로 지정한 뒤 해당 블록 안에서 찾아 바꾸기를 수행할수도 있다. <strong>gg</strong> 키를 눌러 현재의 <code>theproject.html</code> 파일의 맨 첫번째 행으로 커서를 이동한 뒤, 9행부터 14행에 대하여 아래 그림과 같이 비주얼 블록을 지정한다:</p>

<p><img src="/contents-image/w1_l3_h11_18.png" alt="일반 모드 &gt; 9~14행 블록 지정" /></p>

<p>이 상태에서 <strong>:</strong> 키를 누르면 명령행 모드로 전환되는데, 이 때 <code>:'&lt;,'&gt;</code>와 같이 ‘:’ 뒤에 이상한 문자들이 붙는다. 일단 신경쓰지 말고 그 바로 뒤에 이어서 <code>:'&lt;,'&gt;s/WWW/W3</code>를 입력한 뒤 엔터를 누른다. 아래 그림과 같이 하면 된다:</p>

<p><img src="/contents-image/w1_l3_h11_19.png" alt="일반 모드 &gt; :'&lt;,'&gt;s/WWW/W3 입력" /></p>

<p>그러면 아래 그림과 같이, 해당 블록 안의 ‘WWW’에 대해서만 모두 ‘W3’로 바뀌게 된다:</p>

<p><img src="/contents-image/w1_l3_h11_20.png" alt="일반 모드 &gt; :'&lt;,'&gt;s/WWW/W3 입력 &gt; 바뀐 결과 확인" /></p>

<p>이렇게 현재 파일 내용 상의 특정 부분에 대하여 비주얼 블록을 지정한 뒤, <code>:'&lt;,'&gt;s/&lt;기존 단어&gt;/&lt;새로운 단어&gt;</code> 명령어를 사용하면, 해당 블록 내에 등장하는 특정 단어들만 모두 찾아 새로운 단어로 손쉽게 바꿀 수 있다. </p>

<p>여기까지 완료되었으면, <code>:wq</code> 명령어를 실행하여 <code>theproject.html</code> 파일을 저장하고 빔을 종료하도록 하자.</p>

            </div>
          </div>
        </div>

      </div>
        <div class="panel headline_content_body_accordion" style="margin-bottom:100px">

        <div class="panel-heading headline_content_body_accordion_section" style="margin-bottom:-15px;"onClick="accordion_head(37)">
          <h4 class="panel-title">
            <a class="accordion-toggle headline_content_body_accordion_section_text" data-toggle="collapse" data-parent="#accordion" href="#collapse_37" >
            <strong>
              빔을 좀 더 능숙하게 사용하기 (2)
            </strong>
            </a>
          </h4>
        </div>
        <div id="collapse_37" class="panel-collapse collapse">
          <div class="panel-body headline_content_body_accordion_content">
            <div class="section-contents">
              <h1>[0] 빔으로 여러 파일을 동시에 다루기 - 파일 내비게이션 실행하기</h1>

<p>지금까지 여러분은 빔을 사용하여 두 개의 파일을 작성하였다. 실제로 터미널의 홈 디렉터리 상에서 <code>ls</code> 명령어를 실행하면 아래 그림과 같이 <code>practice.rb</code> 파일과 <code>theproject.html</code> 파일이 만들어져 있는 것을 확인할 수 있다:</p>

<div class="linux"><table class="CodeRay"><tr>
  <td class="line-numbers"><pre><a href="#n1" name="n1">1</a>
</pre></td>
  <td class="code"><pre>$ ls
</pre></td>
</tr></table>
</div>

<p><img src="/contents-image/w1_l3_h11_21.png" alt="터미널 &gt; ls 실행 결과" /></p>

<p>이런 식으로 파일이 점차 많아지게 되면, <code>ls</code> 명령어를 통해 파일들의 이름을 일일이 확인하고 기억한 뒤 <code>vi &lt;파일명&gt;</code> 명령어를 사용하여 빔으로 여는 것도 점점 더 번거로워지게 된다. </p>

<p>그럴 때에는 빔에서 제공하는 ‘파일 내비게이션(navigation)’ 기능을 활용하면 좀 더 편하게 작업을 수행할 수 있다. 터미널의 홈 디렉터리 상에서 다음과 같이 입력하고 엔터를 누른다:</p>

<div class="linux"><table class="CodeRay"><tr>
  <td class="line-numbers"><pre><a href="#n1" name="n1">1</a>
</pre></td>
  <td class="code"><pre>$ vi .
</pre></td>
</tr></table>
</div>

<p>그 결과 아래 그림과 같은 파일 내비게이션 화면이 등장하면서, 현재 디렉터리 안에 있는 모든 하위 디렉터리 및 파일들을 나열한다:</p>

<p><img src="/contents-image/w1_l3_h11_22.png" alt="파일 내비게이션" /></p>

<p>이렇게 <code>vi .</code> 명령어를 사용하면, 현재 디렉터리에서 파일 내비게이션이 실행된다. 파일 내비게이션 화면에서도 역시 <strong>h</strong>, <strong>j</strong>, <strong>k</strong>, <strong>l</strong> 키를 사용하여 커서를 이동할 수 있다. 아래 그림과 같이 <strong>j</strong> 키를 5번 눌러 커서를 <code>practice.rb</code> 파일 위에 위치하게 한 다음 엔터를 누른다:</p>

<p><img src="/contents-image/w1_l3_h11_23.png" alt="파일 내비게이션 &gt; practice.rb 선택" /></p>

<p>그러면 아래 그림과 같이 <code>practice.rb</code> 파일이 정상적으로 열리는 것을 확인할 수 있다:</p>

<p><img src="/contents-image/w1_l3_h11_24.png" alt="practice.rb 파일 열기 결과" /></p>

<p>빔에서 제공하는 파일 내비게이션을 사용하면, 현재 디렉터리에서뿐만 아니라 다른 디렉터리로 자유롭게 이동하면서 그 곳에 위치한 파일을 실행할 수도 있다. 파일 내비게이션 상에서 커서를 이동하면서 직접 이것저것 실행해 보도록 하자.</p>

<h1>[1] 빔으로 여러 파일을 동시에 다루기 - 화면 분할 및 화면 전환하기</h1>

<p>바로 전까지의 과정을 따라간 결과, 현재 <code>practice.rb</code> 파일이 열려있는 상황이다. 이 상태에서, <code>theproject.html</code> 파일을 한 화면에서 동시에 열고 싶다고 가정하자. 그렇다면, <strong>:</strong> 키를 눌러 명령행 모드로 전환한 뒤 아래 그림과 같이 <code>vs .</code>라고 입력한 뒤 엔터를 누른다:</p>

<p><img src="/contents-image/w1_l3_h11_25.png" alt="명령행 모드 &gt; :vs . 입력" /></p>

<p>그러면 아래 그림과 같이 화면이 좌우로 분할되면서 좌측 화면에 파일 내비게이션이 표시되는 것을 확인할 수 있다:</p>

<p><img src="/contents-image/w1_l3_h11_26.png" alt="명령행 모드 &gt; :vs . 실행 결과" /></p>

<p>현재 커서가 좌측 화면에 위치하는 것을 확인하자. 이 안에서 자유롭게 커서를 움직이고 파일을 실행할 수 있다. 아래 그림은 좌측 화면에서 <code>theproject.html</code> 파일을 연 결과이다:</p>

<p><img src="/contents-image/w1_l3_h11_27.png" alt="명령행 모드 &gt; 좌측 화면에서 theproject.html 실행 결과" /></p>

<p>현재 커서가 좌측 화면에 위치하는 것을 다시 한 번 확인하자. 커서가 위치하는 화면에서, 해당 화면에서 표시되는 파일의 내용을 자유롭게 수정할 수 있다.</p>

<p>만약 현재 상황에서 커서를 우측 화면으로 이동시키고 싶다면, <strong>Ctrl</strong>+<em>ww</em> 키를 눌러보자(<strong>Ctrl</strong> 키를 누른 상태로 <strong>w</strong> 키를 연속으로 두 번 누르면 된다). 그러면 아래 그림과 같이 커서가 우측 화면으로 이동한 것을 확인할 수 있다:</p>

<p><img src="/contents-image/w1_l3_h11_28.png" alt="Ctrl+ww 실행 &gt; 커서 우측 화면 이동 결과" /></p>

<p>우측 화면에는 <code>practice.rb</code> 파일을 열어놓았던 것을 기억하자. 이 안에서 해당 파일의 내용을 자유롭게 수정할 수 있다.</p>

<p>현재 커서가 우측 화면에 위치해 있는 상황에서, 우측 화면에서 연 <code>practice.rb</code> 파일을 종료하고 싶다면 아래 그림과 같이 <code>:q</code> 명령어를 입력하고 엔터를 누르면 된다:</p>

<p><img src="/contents-image/w1_l3_h11_29.png" alt="커서 우측 화면 &gt; 명령행 모드 &gt; :q 입력" /></p>

<p>그러면 아래 그림과 같이 기존의 우측 화면이 사라지면서, 분할되었던 화면이 다시 하나로 표시되는 것을 확인할 수 있다. 즉, 아직 종료하지 않은 <code>theproject.html</code> 파일의 내용이 표시된다:</p>

<p><img src="/contents-image/w1_l3_h11_30.png" alt="우측 화면 종료 결과" /></p>

<p>방금 전까지 화면을 좌우로 분할했다면, 화면을 상하로 분할할 수도 있다. <strong>:</strong> 키를 눌러 명령행 모드로 전환한 뒤 아래 그림과 같이 <code>sp .</code>라고 입력한 뒤 엔터를 누른다:</p>

<p><img src="/contents-image/w1_l3_h11_31.png" alt="명령행 모드 &gt; :sp . 입력" /></p>

<p>그러면 아래 그림과 같이 화면이 상하로 분할되면서 상측 화면에 파일 내비게이션이 표시되는 것을 확인할 수 있다:</p>

<p><img src="/contents-image/w1_l3_h11_32.png" alt="명령행 모드 &gt; :sp . 실행 결과" /></p>

<p>화면을 상하로 분할한 경우에도 커서 위치 전환 및 분할한 화면 상의 파일 종료 등은 좌우 분할에서의 방법과 완전히 동일하다. 직접 연습해보도록 하자.</p>

<p>한편 화면이 분할되어 있는 상태에서 각각의 파일을 편집한 후, <strong>:</strong> 키를 눌러 명령행 모드로 전환한 뒤 <code>:wa</code> 명령어를 실행하면 현재 편집하고 있던 전체 파일들을 모두 한 번에 저장할 수 있다. 아래 그림과 같이 하면 된다:</p>

<p><img src="/contents-image/w1_l3_h11_33.png" alt="명령행 모드 &gt; :wa 입력" /></p>

<p>그리고 화면이 분할되어 있는 상태에서, <strong>:</strong> 키를 눌러 명령행 모드로 전환한 뒤 <code>:qa</code> 명령어를 실행하면 현재 편집하고 있는 파일들을 모두 한 번에 종료할 수 있다. 아래 그림과 같이 하면 된다:</p>

<p><img src="/contents-image/w1_l3_h11_34.png" alt="명령행 모드 &gt; :wq 입력" /></p>

<div class="additional">
  <p>화면 분할 및 화면 전환 시 사용하는 주요 명령어 및 키를 아래의 표에 정리해 놓았다:</p>

  <table>
    <tr>
        <td><strong>명령어(키)</strong></td>
        <td><strong>설명</strong></td>
    </tr>
    <tr>
        <td><code>:vs .</code></td>
        <td>화면을 좌우로 분할한 뒤, 좌측 화면에 파일 내비게이션 표시 (<strong>v</strong>ertical <strong>s</strong>plit)</td>
    </tr>   
    <tr>
        <td><code>:sp .</code></td>
        <td>화면을 상하로 분할한 뒤, 상측 화면에 파일 내비게이션 표시 (<strong>sp</strong>lit)</td>
    </tr>
    <tr>
        <td><strong>Ctrl</strong>+<strong>ww</strong></td>
        <td>(화면이 분할된 상태에서) 커서 위치 전환</td>
    </tr>
    <tr>
        <td><code>:wa</code></td>
        <td>(화면이 분할된 상태에서) 현재 편집하고 있는 파일을 모두 저장 (<strong>w</strong>rite <strong>a</strong>ll)</td>
    </tr>
    <tr>
        <td><code>:qa</code></td>
        <td>(화면이 분할된 상태에서) 현재 편집하고 있는 파일을 모두 종료 (<strong>q</strong>uit <strong>a</strong>ll)</td>
    </tr>
</table>

  <p>참고로, 화면 분할을 단순히 두 개로만 할 수 있는 건 아니다. 화면 좌우 분할과 상하 분할은 여러 차례 자유롭게 수행할 수 있다. <code>:vs .</code>와 <code>:sp .</code> 명령어를 여러 차례 반복적으로 실행하면서 화면이 어떻게 분할되는지 직접 관찰해보도록 하자.</p>
</div>

            </div>
          </div>
        </div>

      </div>

    </div>
    <div id="contents_read_button">
      <a href="/weeks/headline_complete/12?week_id=2" id="read_button" class="btn btn-primary" disabled="disabled">더 읽고오세요.</a>
    </div>

  </div>
  <!-- headline_content_body class end-->
</div>

</div>

<script type="text/javascript" charset="utf-8">
  $(document).ready(function () {
    js_design();
  });

</script>

<script>
  $(document).ready(function () {
      $('#collapse_'+35).collapse('toggle');
      $('#collapse_'+36).collapse('toggle');
      $('#collapse_'+37).collapse('toggle');

      $('#read_button').css({"margin-bottom":"80px"});
      $('#read_button').removeAttr("disabled");
      $('#read_button').html("퀴즈 풀러 가기");
  });

  function accordion_head(id) {

    $('#collapse_'+id).collapse('toggle');

    $('#collapse_'+id).addClass('read');
    check_read = true

      if ($('#collapse_35').hasClass('read')==false) {
        check_read = false
      }
      if ($('#collapse_36').hasClass('read')==false) {
        check_read = false
      }
      if ($('#collapse_37').hasClass('read')==false) {
        check_read = false
      }

    if (check_read == true) {
      $('#read_button').css({"margin-bottom":"80px"});
      $('#read_button').removeAttr("disabled");
      $('#read_button').html("퀴즈 풀러 가기");
    }
  }

  $('#tip_collapse_1').collapse('toggle');
</script>

    

  <script type="text/javascript" charset="utf-8">
    $(window).scroll(function() {
      // Get scroll position
      var s = $(window).scrollTop(),
      // scroll value and opacity
      opacityVal = (s / 150.0);
      // opacity value 0% to 100%
      $('.blurred-img').css('opacity', opacityVal);
    });

    $('input, textarea').placeholder();

    setTimeout(function() {
      $('#myAlert').fadeOut(1500);
    }, 4000 );
  </script>

</body>
</html>

